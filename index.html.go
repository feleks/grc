package main

var indexHTMLInB64 = `PGh0bWwgbGFuZz0icnUiPgo8aGVhZD4KICAgIDwhLS0gICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAsIG1heGltdW0tc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPTAiLz4tLT4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IgogICAgICAgICAgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCwgaW50ZXJhY3RpdmUtd2lkZ2V0PXJlc2l6ZXMtY29udGVudCwgbWF4aW11bS1zY2FsZT0xLjAsIHVzZXItc2NhbGFibGU9MCI+CiAgICA8dGl0bGU+R1JDPC90aXRsZT4KICAgIDxzdHlsZT4KICAgICAgICBib2R5IHsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzFiMjAyODsKICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgICAgICAgbWFyZ2luOiAwOwogICAgICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDEwMCU7CiAgICAgICAgfQoKICAgICAgICAqIHsKICAgICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgICAgICAgIG92ZXJzY3JvbGwtYmVoYXZpb3I6IG5vbmU7CiAgICAgICAgfQoKICAgICAgICAjdG91Y2hwYWQgewogICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgIHRvcDogMTh2dzsKICAgICAgICAgICAgcmlnaHQ6IDA7CiAgICAgICAgICAgIGJvdHRvbTogMDsKICAgICAgICAgICAgbGVmdDogMDsKICAgICAgICB9CgogICAgICAgICNsb2cgewogICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTsKICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdzYW5zLXNlcmlmJzsKICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44NSk7CiAgICAgICAgICAgIG1heC1oZWlnaHQ6IDcwdnc7CiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICAgICAgfQoKICAgICAgICAjaW5wdXQgewogICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDJ2dzsKICAgICAgICAgICAgdG9wOiAydnc7CiAgICAgICAgICAgIGxlZnQ6IDJ2dzsKICAgICAgICAgICAgd2lkdGg6IDk2dnc7CiAgICAgICAgICAgIGhlaWdodDogMTV2dzsKICAgICAgICAgICAgYm9yZGVyOiBub25lOwogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7CiAgICAgICAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDApOwogICAgICAgICAgICBwYWRkaW5nOiAwIDJ2dzsKICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4OwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHkgc2Nyb2xsPSJubyI+Cgo8ZGl2IGlkPSJ0b3VjaHBhZCI+CiAgICA8ZGl2IGlkPSJsb2ciPjwvZGl2Pgo8L2Rpdj4KPGlucHV0IGlkPSJpbnB1dCIgdHlwZT0idGV4dCIgcGxhY2Vob2xkZXI9ItCS0LLQvtC0INGC0LXQutGB0YLQsCIgYXV0b2NhcGl0YWxpemU9Im5vbmUiIGF1dG9jb21wbGV0ZT0ib2ZmIiBhdXRvY29ycmVjdD0ib2ZmIgogICAgICAgc3BlbGxjaGVjaz0iZmFsc2UiLz4KCjxzY3JpcHQ+CiAgICBjb25zdCB0b3VjaHBhZEVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG91Y2hwYWQnKTsKICAgIGNvbnN0IGxvZ0VsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9nJyk7CiAgICBjb25zdCBpbnB1dEVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5wdXQnKTsKCiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogICAgLy8gd2Vic29ja2V0cwoKICAgIGxldCBzb2NrZXQgPSBuZXcgV2ViU29ja2V0KCJ3czovLyIgKyBsb2NhdGlvbi5ob3N0ICsgIi93cyIpOwogICAgY29uc29sZS5sb2coIkF0dGVtcHRpbmcgQ29ubmVjdGlvbi4uLiIpOwoKICAgIHNvY2tldC5vbm9wZW4gPSAoKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coIlN1Y2Nlc3NmdWxseSBDb25uZWN0ZWQiKTsKICAgICAgICBzb2NrZXQuc2VuZCgiSGkgRnJvbSB0aGUgQ2xpZW50ISIpCiAgICB9OwoKICAgIHNvY2tldC5vbmNsb3NlID0gZXZlbnQgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCJTb2NrZXQgQ2xvc2VkIENvbm5lY3Rpb246ICIsIGV2ZW50KTsKICAgICAgICBzb2NrZXQuc2VuZCgiQ2xpZW50IENsb3NlZCEiKQogICAgfTsKCiAgICBzb2NrZXQub25lcnJvciA9IGVycm9yID0+IHsKICAgICAgICBjb25zb2xlLmxvZygiU29ja2V0IEVycm9yOiAiLCBlcnJvcik7CiAgICB9OwoKICAgIGZ1bmN0aW9uIHNlbmQobXNnKSB7CiAgICAgICAgaWYgKG1zZy50eXBlID09PSAnbW91c2Vtb3ZlJykgewogICAgICAgICAgICBsb2coYG1vdXNlbW92ZSB4PSR7bXNnLngudG9GaXhlZCgxKX0geT0ke21zZy55LnRvRml4ZWQoMSl9YCkKICAgICAgICB9IGVsc2UgaWYgKG1zZy50eXBlID09PSAnc2Nyb2xsJykgewogICAgICAgICAgICBsb2coYG1vdXNlbW92ZSB4PSR7bXNnLngudG9GaXhlZCgxKX0geT0ke21zZy55LnRvRml4ZWQoMSl9YCkKICAgICAgICB9IGVsc2UgaWYgKG1zZy50eXBlID09PSAnY2xpY2snKSB7CiAgICAgICAgICAgIGxvZyhgY2xpY2tgKQogICAgICAgIH0gZWxzZSBpZiAobXNnLnR5cGUgPT09ICdyY2xpY2snKSB7CiAgICAgICAgICAgIGxvZyhgcmNsaWNrYCkKICAgICAgICB9CiAgICAgICAgc29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkobXNnKSk7CiAgICB9CgogICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAgIC8vIHRvdWNoIGhhbmRsZXIKCgogICAgbGV0IHJlbW92ZXJzID0gW107CgogICAgZnVuY3Rpb24gYXBwbHlSZW1vdmVycygpIHsKICAgICAgICBmb3IgKGNvbnN0IHJlbW92ZXIgb2YgcmVtb3ZlcnMpIHsKICAgICAgICAgICAgcmVtb3ZlcigpOwogICAgICAgIH0KICAgICAgICByZW1vdmVycyA9IFtdOwogICAgfQoKICAgIGNvbnN0IHRhcFRpbWUgPSAyMDA7CiAgICBsZXQgbGFzdENsaWNrID0gMDsKCiAgICB0b3VjaHBhZEVsZW0uYWRkRXZlbnRMaXN0ZW5lcigidG91Y2hzdGFydCIsIChlKSA9PiB7CiAgICAgICAgY29uc3QgdG91Y2hlcyA9IGUudG91Y2hlcy5sZW5ndGgKICAgICAgICBhcHBseVJlbW92ZXJzKCk7CiAgICAgICAgbG9nKGB0b3VjaCAke3RvdWNoZXN9YCkKCiAgICAgICAgY29uc3QgdG91Y2ggPSBlLnRvdWNoZXNbMF07CiAgICAgICAgbGV0IHRvdWNoZWRBdCA9IERhdGUubm93KCk7CiAgICAgICAgY29uc3Qgc2luY2VDbGlja2VkID0gdG91Y2hlZEF0IC0gbGFzdENsaWNrCiAgICAgICAgY29uc3Qgc2VsZWN0TW9kZSA9IHNpbmNlQ2xpY2tlZCA8IDQwMAogICAgICAgIGxldCBwcmV2ID0gewogICAgICAgICAgICB4OiB0b3VjaC5wYWdlWCwKICAgICAgICAgICAgeTogdG91Y2gucGFnZVksCiAgICAgICAgfQoKICAgICAgICBjb25zdCBvblRvdWNoTW92ZSA9IChlKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IHRvdWNoID0gZS50b3VjaGVzWzBdOwoKICAgICAgICAgICAgbGV0IGRlbHRhID0gewogICAgICAgICAgICAgICAgeDogdG91Y2gucGFnZVggLSBwcmV2LngsCiAgICAgICAgICAgICAgICB5OiB0b3VjaC5wYWdlWSAtIHByZXYueQogICAgICAgICAgICB9CiAgICAgICAgICAgIHByZXYgPSB7CiAgICAgICAgICAgICAgICB4OiB0b3VjaC5wYWdlWCwKICAgICAgICAgICAgICAgIHk6IHRvdWNoLnBhZ2VZLAogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodG91Y2hlcyA9PT0gMSkgewogICAgICAgICAgICAgICAgc2VuZCh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ21vdXNlbW92ZScsCiAgICAgICAgICAgICAgICAgICAgeDogZGVsdGEueCwKICAgICAgICAgICAgICAgICAgICB5OiBkZWx0YS55LAogICAgICAgICAgICAgICAgICAgIHNlbGVjdF9tb2RlOiBzZWxlY3RNb2RlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIGlmICh0b3VjaGVzID09PSAyKSB7CiAgICAgICAgICAgICAgICBjb25zdCB0aW1lRWxhcHNlZCA9IERhdGUubm93KCkgLSB0b3VjaGVkQXQ7CiAgICAgICAgICAgICAgICBpZiAodGltZUVsYXBzZWQgPiB0YXBUaW1lKSB7CiAgICAgICAgICAgICAgICAgICAgc2VuZCh7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzY3JvbGwnLAogICAgICAgICAgICAgICAgICAgICAgICB4OiBkZWx0YS54LAogICAgICAgICAgICAgICAgICAgICAgICB5OiBkZWx0YS55CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29uc3Qgb25Ub3VjaEVuZCA9ICgpID0+IHsKICAgICAgICAgICAgY29uc3QgdGltZUVsYXBzZWQgPSBEYXRlLm5vdygpIC0gdG91Y2hlZEF0OwoKICAgICAgICAgICAgaWYgKHRvdWNoZXMgPT09IDEpIHsKICAgICAgICAgICAgICAgIHNlbmQoe3R5cGU6ICdlbmRfbW91c2Vtb3ZlJ30pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAodGltZUVsYXBzZWQgPCB0YXBUaW1lKSB7CiAgICAgICAgICAgICAgICBpZiAodG91Y2hlcyA9PT0gMikgewogICAgICAgICAgICAgICAgICAgIHNlbmQoe3R5cGU6ICdyY2xpY2snfSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRvdWNoZXMgPT09IDMpIHsKICAgICAgICAgICAgICAgICAgICBzZW5kKHt0eXBlOiAnc2hpZnQrY2xpY2snfSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRvdWNoZXMgPT09IDQpIHsKICAgICAgICAgICAgICAgICAgICBzZW5kKHt0eXBlOiAnY3RybCtjbGljayd9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHNlbGVjdE1vZGUpIHsKICAgICAgICAgICAgICAgIHNlbmQoe3R5cGU6ICdlbmRfc2VsZWN0J30pOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZW1vdmVyKCk7CiAgICAgICAgfQogICAgICAgIGNvbnN0IHJlbW92ZXIgPSAoKSA9PiB7CiAgICAgICAgICAgIGUudGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoInRvdWNobW92ZSIsIG9uVG91Y2hNb3ZlKTsKICAgICAgICAgICAgZS50YXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigidG91Y2hlbmQiLCBvblRvdWNoRW5kKTsKICAgICAgICB9CiAgICAgICAgZS50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigidG91Y2htb3ZlIiwgb25Ub3VjaE1vdmUpOwogICAgICAgIGUudGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoInRvdWNoZW5kIiwgb25Ub3VjaEVuZCk7CiAgICAgICAgcmVtb3ZlcnMucHVzaChyZW1vdmVyKTsKICAgIH0pOwoKICAgIHRvdWNocGFkRWxlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7CiAgICAgICAgYXBwbHlSZW1vdmVycygpOwogICAgICAgIGxhc3RDbGljayA9IERhdGUubm93KCk7CiAgICAgICAgc2VuZCh7dHlwZTogJ2NsaWNrJ30pOwogICAgfSkKCiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogICAgLy8gbG9ncwoKICAgIGxldCBsb2dzID0gW107CgogICAgZnVuY3Rpb24gbG9nKCkgewogICAgICAgIGZvciAoY29uc3QgbCBvZiBhcmd1bWVudHMpIHsKICAgICAgICAgICAgbG9ncyA9IFsKICAgICAgICAgICAgICAgIGwsCiAgICAgICAgICAgICAgICAuLi5sb2dzLnNsaWNlKDAsIDUwKQogICAgICAgICAgICBdCiAgICAgICAgfQoKICAgICAgICBsZXQgbG9nc0h0bWwgPSAnJzsKICAgICAgICBmb3IgKGNvbnN0IGwgb2YgbG9ncykgewogICAgICAgICAgICBsb2dzSHRtbCArPSBgJHtsfTxici8+YAogICAgICAgIH0KCiAgICAgICAgbG9nRWxlbS5pbm5lckhUTUwgPSBsb2dzSHRtbDsKICAgIH0KCiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwogICAgLy8gaW5wdXQKCiAgICBpbnB1dEVsZW0uYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoZSkgPT4gewogICAgICAgIGlmIChlLmlucHV0VHlwZSA9PSAiaW5zZXJ0VGV4dCIpIHsKICAgICAgICAgICAgc2VuZCh7dHlwZTogJ2tleXByZXNzJywgdmFsdWU6IGUuZGF0YX0pOwogICAgICAgICAgICBsb2coYGUuZGF0YTogJHtlLmRhdGF9YCkKICAgICAgICB9CgogICAgICAgIGlmIChlLmlucHV0VHlwZSA9PSAiZGVsZXRlQ29udGVudEJhY2t3YXJkIikgewogICAgICAgICAgICBzZW5kKHt0eXBlOiAna2V5cHJlc3MnLCB2YWx1ZTogJyRiYWNrc3BhY2UnfSk7CiAgICAgICAgfQoKICAgICAgICBpZiAoZS5pbnB1dFR5cGUgPT0gImluc2VydENvbXBvc2l0aW9uVGV4dCIpIHsKICAgICAgICAgICAgbG9nKCdpbnNlcnRDb21wb3NpdGlvblRleHQnKQogICAgICAgIH0KICAgIH0pCgogICAgaW5wdXRFbGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgICAgaW5wdXRFbGVtLnZhbHVlID0gJ3x8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHwnOwogICAgfSkKICAgIGlucHV0RWxlbS52YWx1ZSA9ICd8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8JzsKPC9zY3JpcHQ+Cgo8L2JvZHk+CjwvaHRtbD4KCg==`
